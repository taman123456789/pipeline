// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pipeline.Data.Data;

#nullable disable

namespace Pipeline.Data.Migrations
{
    [DbContext(typeof(PipelineContext))]
    [Migration("20230422165945_initDB")]
    partial class initDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Pipeline.Model.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Categories_Id");

                    b.Property<string>("CategoriesDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("Categories_Description");

                    b.Property<string>("CategoriesName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Categories_Name");

                    b.Property<string>("CategoriesNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("Categories_Notes");

                    b.Property<Guid>("CategoriesParent")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Categories_Parent");

                    b.Property<int>("CategoriesSortOrder")
                        .HasColumnType("int")
                        .HasColumnName("Categories_SortOrder");

                    b.Property<DateTime>("TimeFirst")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeLast")
                        .HasColumnType("datetime2");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", "Production");
                });

            modelBuilder.Entity("Pipeline.Model.Models.Customer", b =>
                {
                    b.Property<Guid>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Customer_Id");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("city");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Email");

                    b.Property<string>("FirstName")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("First_Name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Last_Name");

                    b.Property<string>("Phone")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("Phone");

                    b.Property<string>("State")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("state");

                    b.Property<string>("Street")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Street");

                    b.Property<DateTime>("TimeFirst")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeLast")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(5)
                        .IsUnicode(false)
                        .HasColumnType("varchar(5)")
                        .HasColumnName("Zip_Code");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers", "Sales");
                });

            modelBuilder.Entity("Pipeline.Model.Models.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Products_Id");

                    b.Property<string>("ProductCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Products_Name");

                    b.Property<Guid>("ProductUnitTypesId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ProductUnitTypes_Id");

                    b.Property<string>("ProductsAccuracy")
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Products_Accuracy");

                    b.Property<string>("ProductsDescription")
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("Products_Description");

                    b.Property<bool>("ProductsIsArchived")
                        .HasColumnType("bit")
                        .HasColumnName("Products_IsArchived");

                    b.Property<string>("ProductsNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(4000)")
                        .HasColumnName("Products_Notes");

                    b.Property<decimal>("ProductsProjectedCost")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("Products_ProjectedCost");

                    b.Property<int>("ProductsRounding")
                        .HasColumnType("int")
                        .HasColumnName("Products_Rounding");

                    b.Property<bool>("ProductsSupplementalToBid")
                        .HasColumnType("bit")
                        .HasColumnName("Products_SupplementalToBid");

                    b.Property<decimal>("ProductsWaste")
                        .HasColumnType("decimal(9,2)")
                        .HasColumnName("Products_Waste");

                    b.Property<DateTime>("TimeFirst")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TimeLast")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductId");

                    b.ToTable("Products", "Production");
                });
#pragma warning restore 612, 618
        }
    }
}
